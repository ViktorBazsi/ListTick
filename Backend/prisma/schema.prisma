// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String          @id @default(cuid())
  firstName   String?
  lastName    String?
  username    String          @unique
  email       String          @unique
  password    String
  isAdmin     Boolean         @default(false)
  houseHolds  Household[]     @relation("Household_User")
  joinRequests  HouseholdJoinRequest[] 
}

model Household {
  id          String          @id @default(cuid())
  name        String
  address     String?
  users       User[]          @relation("Household_User")
  goods       Good[]
  reqUsers      HouseholdJoinRequest[]        
}

model HouseholdJoinRequest {
  id            String     @id @default(cuid())
  createdAt     DateTime   @default(now())
  userId        String
  householdId   String

  user          User       @relation(fields: [userId], references: [id])
  household     Household  @relation(fields: [householdId], references: [id])

  @@unique([userId, householdId], name: "userId_householdId") // egy user csak egyszer kérhet csatlakozást adott háztartáshoz
}

model Good {
  id          String          @id @default(cuid())
  name        String
  expiration  String?
  price       Int?
  shop        String?
  type        Type
  status      Status
  householdId String
  household   Household       @relation(fields: [householdId], references: [id])

}

enum Status {
  out
  quarter
  half
  threeQuarter
  full
}

enum Type {
  fruit
  vegetable
  dairy
  meat
  baked
  cold_cuts
  snacks
  drinks
  other
  dry
}